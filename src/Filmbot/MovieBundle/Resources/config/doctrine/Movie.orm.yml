Filmbot\MovieBundle\Entity\Movie:
    type: entity
    gedmo:
        translation:
            entity: Filmbot\MovieBundle\Entity\MovieTranslation
    id:
        id:
            type: string
            generator:
                strategy: UUID
    fields:
        slug:
            type: string
            length: 100
        title:
            type: string
            length: 50
        duration:
            type: integer
        year:
            type: integer
        storyline:
            type: string
            length: 2000
            nullable: true
        producer:
            type: string
            length: 100
            nullable: true
    oneToMany:
        cast:
            targetEntity: Filmbot\ArtistBundle\Entity\Actor
            mappedBy: movies
            cascade: ["persist", "remove"]
            joinColumn:
                name: movie_id
                referencedColumnName: id
                onDelete: cascade
        directors:
            targetEntity: Filmbot\ArtistBundle\Entity\Director
            mappedBy: movies
            cascade: ["persist", "remove"]
            joinColumn:
                name: movie_id
                referencedColumnName: id
                onDelete: cascade
        writers:
            targetEntity: Filmbot\ArtistBundle\Entity\Writer
            mappedBy: movies
            cascade: ["persist", "remove"]
            joinColumn:
                name: movie_id
                referencedColumnName: id
                onDelete: cascade
        translations:
            targetEntity: Filmbot\MovieBundle\Entity\MovieTranslation
            mappedBy: object
            cascade: ["persist", "remove"]
    manyToOne:
        country:
            targetEntity: JJs\Bundle\GeonamesBundle\Entity\City

    manyToMany:
        genres:
            targetEntity: Filmbot\MovieBundle\Model\GenreInterface
            joinTable:
                name: MovieGenre
                joinColumns:
                    movie_id:
                        referencedColumnName: id
                inverseJoinColumns:
                    genre_id:
                        referencedColumnName: id
